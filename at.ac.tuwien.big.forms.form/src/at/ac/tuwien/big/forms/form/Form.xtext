// automatically generated by Xtext
grammar at.ac.tuwien.big.forms.form.Form with org.eclipse.xtext.common.Terminals

import "http://www.big.tuwien.ac.at/forms" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

// implement your grammar here, starting with the root element: FormModel
FormModel returns FormModel:
	{FormModel}
	(forms+=Form)*
;

Form returns Form:
	(welcomeForm?='welcome')? 'form' name=ID title=EString 'handles' entity=[Entity | QualifiedName] '{'
		(pages+=Page)*
	'}' 
		
;

Page returns Page:
	'page' title=EString '{' (pageElements+=PageElement)* '}'
;

NamedElement:
	Form
;

PageElement:
	RelationshipPageElement | AttributePageElement
;

RelationshipPageElement :
	List | Table
;

List returns List:
	'list' elementID=ID label=EString 'handles' relationship=[Relationship | QualifiedName] 'edits' editingForm=[Form | QualifiedName]
;

Table returns Table:
	'table' elementID=ID label=EString 'handles' relationship=[Relationship | QualifiedName] '{'
		(columns+=Column)*
	'}' 'edits' editingForm=[Form | QualifiedName]
;

Column returns Column:
	'column' elementID=ID label=EString 'handles' attribute=[Attribute | QualifiedName](',')?
;

AttributePageElement:
	Column | TextField | TextArea | SelectionField | DateSelectionField | TimeSelectionField
;

TextField returns TextField:
	'text-field' elementID=ID label=EString 'format'? format=EString? 'handles' attribute=[Attribute | QualifiedName](',')?
;

TextArea returns TextArea:
	'text-area' elementID=ID label=EString 'handles' attribute=[Attribute | QualifiedName](',')?
;

SelectionField returns SelectionField:
	'selection-field' elementID=ID label=EString 'handles' attribute=[Attribute | QualifiedName](',')?
;

DateSelectionField returns DateSelectionField:
	'date-selection-field' elementID=ID label=EString 'handles' attribute=[Attribute | QualifiedName](',')?
;

TimeSelectionField returns TimeSelectionField:
	'time-selection-field' elementID=ID label=EString 'handles' attribute=[Attribute | QualifiedName](',')?
;

EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;

QualifiedName returns ecore::EString: 
	ID (=> '.'ID)*;